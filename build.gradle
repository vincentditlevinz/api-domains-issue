plugins {
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.google.protobuf' version '0.9.2'
	id 'java'
	id 'maven-publish'
	id "com.gitlab.protobuf-tools.proto-publish" version "1.0.0"
	id "com.diffplug.spotless" version "6.18.0"
}

import org.silbertb.gradle.protopublish.ProtoDocumentationTask


group = 'com.acme'
version = '0.0.1'
sourceCompatibility = '17'

description = 'Modular domain driven business api'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

bootRun {
	systemProperty 'spring.profiles.active', 'local'
}

ext {
	set('modulithVersion', "0.5.1")
	set('testcontainersVersion', "1.17.6")
	set('grpcSpringbootStarterVersion', "5.1.1")
	set('reactiveGrpcVersion', "1.2.4")
	set('javaGrpcVersion', "1.54.0")
	set('protobufProtocVersion', "3.22.0")
	set('pgvVersion', "1.0.0")
}

dependencies {
	implementation 'org.springframework.experimental:spring-modulith-core'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation "io.github.lognet:grpc-spring-boot-starter:${grpcSpringbootStarterVersion}"
	implementation 'io.grpc:grpc-netty-shaded'
	implementation 'io.grpc:grpc-protobuf'
	implementation 'io.grpc:grpc-stub'
	implementation "build.buf.protoc-gen-validate:pgv-java-stub:${pgvVersion}"
	implementation 'io.envoyproxy.protoc-gen-validate:pgv-java-grpc:0.6.13'
	implementation "com.salesforce.servicelibs:reactor-grpc-stub:${reactiveGrpcVersion}"

	developmentOnly "org.springframework.boot:spring-boot-devtools"

	runtimeOnly 'org.flywaydb:flyway-core'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'org.postgresql:r2dbc-postgresql'
	runtimeOnly 'org.springframework:spring-jdbc'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.experimental:spring-modulith-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.testcontainers:r2dbc'
	testImplementation 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
		mavenBom "org.springframework.experimental:spring-modulith-bom:${modulithVersion}"
		mavenBom "io.grpc:grpc-bom:${javaGrpcVersion}"
	}
}

springBoot {
	buildInfo()
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		exceptionFormat = 'full'
	}
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:${protobufProtocVersion}"
	}
	clean {
		delete generatedFilesBaseDir
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${javaGrpcVersion}"
		}
		reactor {
			artifact = "com.salesforce.servicelibs:reactor-grpc:${reactiveGrpcVersion}"
		}
		javapgv {
			artifact = "build.buf.protoc-gen-validate:protoc-gen-validate:${pgvVersion}"
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
			reactor {}
			javapgv {
				option "lang=java"
			}
		}
	}
}

protoPublish {
	useValidation()
	// previousVersion = "0.0.1" // to activate when we will have a previous version
}

tasks.register('protoDoc', ProtoDocumentationTask) {
	addGenerateDeps(["google", "validate"])
}

publishing {
	publications {
		maven(MavenPublication) {
			from components.proto
		}
	}
}

spotless {
	// Make CI fail...
	//ratchetFrom 'origin/master'

	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '*.md', '.gitignore'
		trimTrailingWhitespace()
		indentWithTabs(4)
		endWithNewline()
		setEncoding('utf-8')
	}
	java {
		targetExclude('build/generated/**/*.java')
		formatAnnotations()
		removeUnusedImports()
		googleJavaFormat('1.16.0').aosp().reflowLongStrings()
	}
}

sourceSets {
	main {
		java {
			srcDirs 'build/generated/source/proto/main/grpc'
			srcDirs 'build/generated/source/proto/main/java'
			srcDirs 'build/generated/source/proto/main/reactor'
		}
	}
}
